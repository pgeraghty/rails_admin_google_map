<%= form.send :text_field, nil, name:'_search', id: field.dom_name + '_search', class: 'form-control', style: 'width: 100%; border-radius: 0;', value: '' %>
<div class="ra-google-map-container" id="<%= field.dom_name %>" style="width:100%; min-height:350px"></div>
<%= form.send :hidden_field, field.method_name, id: form.options[:as].to_s + '_' + field.name.to_s, value: field.form_value %>

<script type="text/javascript">
  var map = {};
  var markers;
  var lat = <%= field.default_latitude %>;
  var lng = <%= field.default_longitude %>;

  function initMap() {
    markers = [];

    try {
      loc = JSON.parse(document.getElementById("<%= form.options[:as].to_s + '_' + field.name.to_s %>").value).location;
      lat = loc.latitude;
      lng = loc.longitude;
    }
    catch(err) {}

    var myOptions = {
      zoom: <%= field.default_zoom_level %>,
      center: new google.maps.LatLng(lat, lng),
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      scrollwheel: false
    };
    map = new google.maps.Map(document.getElementById("<%= field.dom_name %>"), myOptions);
    document.getElementById("<%= field.dom_name + '_search' %>").value = '';
    initializeAutocomplete('<%= field.dom_name %>_search');

    function initializeAutocomplete(id) {
      var element = document.getElementById(id);
      var searchBox = new google.maps.places.SearchBox(element);
      if (searchBox) {
        map.addListener('bounds_changed', function() {
          searchBox.setBounds(map.getBounds());
        });
        searchBox.addListener('places_changed', onPlaceChanged);
      }
    }
    updateMarker();
  }

  if(!(typeof google === 'object' && typeof google.maps === 'object')) {
    var url = 'https://maps.googleapis.com/maps/api/js?key=<%= field.google_api_key %>&language=<%= field.locale %>&libraries=places&callback=initMap';
    $.getScript(url);
  } else {
    initMap();
  }

  function onPlaceChanged() {
    cleanAllMarkers();
    var final_datas = {}
    var places = this.getPlaces();
    var place = places[0]

    if (place.length == 0) {
      return;
    }

    var location = place.geometry.location;
    final_datas.location = {
      latitude: location.lat(),
      longitude: location.lng()
    };
    final_datas.formatted_address = place.formatted_address;
    for (var i in place.address_components) {
      var component = place.address_components[i];
      for (var j in component.types) {
        final_datas[component.types[j]] = component.long_name;
      }
    }
    document.getElementById("<%= form.options[:as].to_s + '_' + field.name.to_s %>").value = JSON.stringify(final_datas);
    updateMarker(final_datas);

  }

  function updateMarker(json) {
    if (json && json.location) {
      var marker = new google.maps.Marker({
        position: new google.maps.LatLng(json.location.latitude, json.location.longitude),
        map: map
      });
      markers.push(marker);
      map.setCenter(new google.maps.LatLng(json.location.latitude, json.location.longitude));
    }
  }

  function cleanAllMarkers() {
    for (var i = 0; i < markers.length; i++) {
      markers[i].setMap(null);
    }
  }
</script>
